from pyrogram import Client, filters, enums
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from pyrogram.errors import UserNotParticipant
from config import Config
from helper.database import db

async def not_subscribed(_, client, message):
    await db.add_user(client, message)
    
    if not Config.FORCE_SUB:
        return False  # No force subscription required

    try:             
        user = await client.get_chat_member(Config.FORCE_SUB, message.from_user.id) 
        if user.status == enums.ChatMemberStatus.BANNED:
            return True 
        return False  # User is not banned, so no restriction
    except (UserNotParticipant, KeyError):  # Catch both exceptions
        return True  # User is not a participant, so needs to subscribe


@Client.on_message(filters.private & filters.create(not_subscribed))
async def forces_sub(client, message):
    buttons = [
        [InlineKeyboardButton(text="üì¢ ·¥ä·¥è…™…¥ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{Config.FORCE_SUB}")]
    ]
    
    text = "**s·¥è Ä Ä è,  è·¥è·¥ú' Ä·¥á …¥·¥è·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö ·¥ç è ·¥Ñ ú·¥Ä…¥…¥·¥á ü. ·¥ò ü·¥á·¥Äs·¥á ·¥ä·¥è…™…¥ ·¥è·¥ú Ä ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á ·¥Ñ ú·¥Ä…¥…¥·¥á ü ·¥õ·¥è ·¥Ñ·¥è…¥·¥õ…™…¥·¥ú·¥á.**"

    try:
        user = await client.get_chat_member(Config.FORCE_SUB, message.from_user.id)    
        if user.status == enums.ChatMemberStatus.BANNED:                                   
            return await client.send_message(
                message.from_user.id,
                text="S·¥è Ä Ä è, Y·¥è·¥ú' Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö F Ä·¥è·¥ç UÍú±…™…¥…¢ T ú…™Íú± B·¥è·¥õ."
            )  
    except (UserNotParticipant, KeyError):                       
        return await message.reply_text(text=text, reply_markup=InlineKeyboardMarkup(buttons))
        
